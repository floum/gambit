import{posToTranslate as e,key2pos as o,translateAndScale as i,createEl as r}from"./util.js";import{whitePov as n}from"./board.js";import{syncShapes as c}from"./sync.js";import"./types.js";import"./premove.js";function render(e,o){const i=e.drawable.autoShapes.filter((e=>e.piece));const r=i.map((e=>({shape:e,hash:hash(e),current:false})));c(r,o,(o=>renderShape(e,o,e.dom.bounds())))}function renderResized(r){var c;const t=n(r),s=e(r.dom.bounds());let l=(c=r.dom.elements.autoPieces)===null||c===void 0?void 0:c.firstChild;while(l){i(l,s(o(l.cgKey),t),l.cgScale);l=l.nextSibling}}function renderShape(c,{shape:t,hash:s},l){var d,a,p;const u=t.orig;const v=(d=t.piece)===null||d===void 0?void 0:d.role;const m=(a=t.piece)===null||a===void 0?void 0:a.color;const h=(p=t.piece)===null||p===void 0?void 0:p.scale;const f=r("piece",`${v} ${m}`);f.setAttribute("cgHash",s);f.cgKey=u;f.cgScale=h;i(f,e(l)(o(u),n(c)),h);return f}const hash=e=>{var o,i,r;return[e.orig,(o=e.piece)===null||o===void 0?void 0:o.role,(i=e.piece)===null||i===void 0?void 0:i.color,(r=e.piece)===null||r===void 0?void 0:r.scale].join(",")};export{render,renderResized};
//# sourceMappingURL=autoPieces.js.map
