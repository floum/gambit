// chessground@9.1.1 downloaded from https://ga.jspm.io/npm:chessground@9.1.1/dist/chessground.js

import{start as r}from"./api.js";import{configure as e}from"./config.js";import{defaults as o}from"./state.js";import{renderWrap as s}from"./wrap.js";import{bindBoard as t,bindDocument as n}from"./events.js";import{render as i,updateBounds as m,renderResized as d}from"./render.js";import{render as a,renderResized as u}from"./autoPieces.js";import{renderSvg as p}from"./svg.js";import{memo as f}from"./util.js";import"./board.js";import"./premove.js";import"./fen.js";import"./types.js";import"./anim.js";import"./drag.js";import"./draw.js";import"./explosion.js";import"./drop.js";import"./sync.js";function initModule({el:r,config:e}){return Chessground(r,e)}function Chessground(c,j){const l=o();e(l,j||{});function redrawAll(){const r="dom"in l?l.dom.unbind:void 0;const e=s(c,l),o=f((()=>e.board.getBoundingClientRect())),redrawNow=r=>{i(j);e.autoPieces&&a(j,e.autoPieces);!r&&e.svg&&p(j,e.svg,e.customSvg)},onResize=()=>{m(j);d(j);e.autoPieces&&u(j)};const j=l;j.dom={elements:e,bounds:o,redraw:debounceRedraw(redrawNow),redrawNow:redrawNow,unbind:r};j.drawable.prevSvgHash="";m(j);redrawNow(false);t(j,onResize);r||(j.dom.unbind=n(j,onResize));j.events.insert&&j.events.insert(e);return j}return r(redrawAll(),redrawAll)}function debounceRedraw(r){let e=false;return()=>{if(!e){e=true;requestAnimationFrame((()=>{r();e=false}))}}}export{Chessground,initModule};

