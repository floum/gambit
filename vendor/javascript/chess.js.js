// chess.js@1.0.0 downloaded from https://ga.jspm.io/npm:chess.js@1.0.0/dist/esm/chess.js

/**
 * @license
 * Copyright (c) 2025, Jeff Hlywa (jhlywa@gmail.com)
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * 1. Redistributions of source code must retain the above copyright notice,
 *    this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright notice,
 *    this list of conditions and the following disclaimer in the documentation
 *    and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */
const t="w";const e="b";const s="p";const i="n";const o="b";const r="r";const n="q";const a="k";const h="rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1";class Move{color;from;to;piece;captured;promotion;
/**
     * @deprecated This field is deprecated and will be removed in version 2.0.0.
     * Please use move descriptor functions instead: `isCapture`, `isPromotion`,
     * `isEnPassant`, `isKingsideCastle`, `isQueensideCastle`, `isCastle`, and
     * `isBigPawn`
     */
flags;san;lan;before;after;constructor(t,e){const{color:s,piece:i,from:o,to:r,flags:n,captured:a,promotion:h}=e;const l=algebraic(o);const u=algebraic(r);this.color=s;this.piece=i;this.from=l;this.to=u;this.san=t._moveToSan(e,t._moves({legal:true}));this.lan=l+u;this.before=t.fen();t._makeMove(e);this.after=t.fen();t._undoMove();this.flags="";for(const t in f)f[t]&n&&(this.flags+=c[t]);a&&(this.captured=a);if(h){this.promotion=h;this.lan+=h}}isCapture(){return this.flags.indexOf(c.CAPTURE)>-1}isPromotion(){return this.flags.indexOf(c.PROMOTION)>-1}isEnPassant(){return this.flags.indexOf(c.EP_CAPTURE)>-1}isKingsideCastle(){return this.flags.indexOf(c.KSIDE_CASTLE)>-1}isQueensideCastle(){return this.flags.indexOf(c.QSIDE_CASTLE)>-1}isBigPawn(){return this.flags.indexOf(c.BIG_PAWN)>-1}}const l=-1;const c={NORMAL:"n",CAPTURE:"c",BIG_PAWN:"b",EP_CAPTURE:"e",PROMOTION:"p",KSIDE_CASTLE:"k",QSIDE_CASTLE:"q"};const u=["a8","b8","c8","d8","e8","f8","g8","h8","a7","b7","c7","d7","e7","f7","g7","h7","a6","b6","c6","d6","e6","f6","g6","h6","a5","b5","c5","d5","e5","f5","g5","h5","a4","b4","c4","d4","e4","f4","g4","h4","a3","b3","c3","d3","e3","f3","g3","h3","a2","b2","c2","d2","e2","f2","g2","h2","a1","b1","c1","d1","e1","f1","g1","h1"];const f={NORMAL:1,CAPTURE:2,BIG_PAWN:4,EP_CAPTURE:8,PROMOTION:16,KSIDE_CASTLE:32,QSIDE_CASTLE:64};const _={a8:0,b8:1,c8:2,d8:3,e8:4,f8:5,g8:6,h8:7,a7:16,b7:17,c7:18,d7:19,e7:20,f7:21,g7:22,h7:23,a6:32,b6:33,c6:34,d6:35,e6:36,f6:37,g6:38,h6:39,a5:48,b5:49,c5:50,d5:51,e5:52,f5:53,g5:54,h5:55,a4:64,b4:65,c4:66,d4:67,e4:68,f4:69,g4:70,h4:71,a3:80,b3:81,c3:82,d3:83,e3:84,f3:85,g3:86,h3:87,a2:96,b2:97,c2:98,d2:99,e2:100,f2:101,g2:102,h2:103,a1:112,b1:113,c1:114,d1:115,e1:116,f1:117,g1:118,h1:119};const d={b:[16,32,17,15],w:[-16,-32,-17,-15]};const p={n:[-18,-33,-31,-14,18,33,31,14],b:[-17,-15,17,15],r:[-16,1,16,-1],q:[-17,-16,-15,1,17,16,15,-1],k:[-17,-16,-15,1,17,16,15,-1]};const g=[20,0,0,0,0,0,0,24,0,0,0,0,0,0,20,0,0,20,0,0,0,0,0,24,0,0,0,0,0,20,0,0,0,0,20,0,0,0,0,24,0,0,0,0,20,0,0,0,0,0,0,20,0,0,0,24,0,0,0,20,0,0,0,0,0,0,0,0,20,0,0,24,0,0,20,0,0,0,0,0,0,0,0,0,0,20,2,24,2,20,0,0,0,0,0,0,0,0,0,0,0,2,53,56,53,2,0,0,0,0,0,0,24,24,24,24,24,24,56,0,56,24,24,24,24,24,24,0,0,0,0,0,0,2,53,56,53,2,0,0,0,0,0,0,0,0,0,0,0,20,2,24,2,20,0,0,0,0,0,0,0,0,0,0,20,0,0,24,0,0,20,0,0,0,0,0,0,0,0,20,0,0,0,24,0,0,0,20,0,0,0,0,0,0,20,0,0,0,0,24,0,0,0,0,20,0,0,0,0,20,0,0,0,0,0,24,0,0,0,0,0,20,0,0,20,0,0,0,0,0,0,24,0,0,0,0,0,0,20];const m=[17,0,0,0,0,0,0,16,0,0,0,0,0,0,15,0,0,17,0,0,0,0,0,16,0,0,0,0,0,15,0,0,0,0,17,0,0,0,0,16,0,0,0,0,15,0,0,0,0,0,0,17,0,0,0,16,0,0,0,15,0,0,0,0,0,0,0,0,17,0,0,16,0,0,15,0,0,0,0,0,0,0,0,0,0,17,0,16,0,15,0,0,0,0,0,0,0,0,0,0,0,0,17,16,15,0,0,0,0,0,0,0,1,1,1,1,1,1,1,0,-1,-1,-1,-1,-1,-1,-1,0,0,0,0,0,0,0,-15,-16,-17,0,0,0,0,0,0,0,0,0,0,0,0,-15,0,-16,0,-17,0,0,0,0,0,0,0,0,0,0,-15,0,0,-16,0,0,-17,0,0,0,0,0,0,0,0,-15,0,0,0,-16,0,0,0,-17,0,0,0,0,0,0,-15,0,0,0,0,-16,0,0,0,0,-17,0,0,0,0,-15,0,0,0,0,0,-16,0,0,0,0,0,-17,0,0,-15,0,0,0,0,0,0,-16,0,0,0,0,0,0,-17];const b={p:1,n:2,b:4,r:8,q:16,k:32};const v="pnbrqkPNBRQK";const C=[i,o,r,n];const E=7;const k=6;const S=1;const w=0;const A={[a]:f.KSIDE_CASTLE,[n]:f.QSIDE_CASTLE};const y={w:[{square:_.a1,flag:f.QSIDE_CASTLE},{square:_.h1,flag:f.KSIDE_CASTLE}],b:[{square:_.a8,flag:f.QSIDE_CASTLE},{square:_.h8,flag:f.KSIDE_CASTLE}]};const I={b:S,w:k};const P=["1-0","0-1","1/2-1/2","*"];function rank(t){return t>>4}function file(t){return t&15}function isDigit(t){return"0123456789".indexOf(t)!==-1}function algebraic(t){const e=file(t);const s=rank(t);return"abcdefgh".substring(e,e+1)+"87654321".substring(s,s+1)}function swapColor(s){return s===t?e:t}function validateFen(t){const e=t.split(/\s+/);if(e.length!==6)return{ok:false,error:"Invalid FEN: must contain six space-delimited fields"};const s=parseInt(e[5],10);if(isNaN(s)||s<=0)return{ok:false,error:"Invalid FEN: move number must be a positive integer"};const i=parseInt(e[4],10);if(isNaN(i)||i<0)return{ok:false,error:"Invalid FEN: half move counter number must be a non-negative integer"};if(!/^(-|[abcdefgh][36])$/.test(e[3]))return{ok:false,error:"Invalid FEN: en-passant square is invalid"};if(/[^kKqQ-]/.test(e[2]))return{ok:false,error:"Invalid FEN: castling availability is invalid"};if(!/^(w|b)$/.test(e[1]))return{ok:false,error:"Invalid FEN: side-to-move is invalid"};const o=e[0].split("/");if(o.length!==8)return{ok:false,error:"Invalid FEN: piece data does not contain 8 '/'-delimited rows"};for(let t=0;t<o.length;t++){let e=0;let s=false;for(let i=0;i<o[t].length;i++)if(isDigit(o[t][i])){if(s)return{ok:false,error:"Invalid FEN: piece data is invalid (consecutive number)"};e+=parseInt(o[t][i],10);s=true}else{if(!/^[prnbqkPRNBQK]$/.test(o[t][i]))return{ok:false,error:"Invalid FEN: piece data is invalid (invalid piece)"};e+=1;s=false}if(e!==8)return{ok:false,error:"Invalid FEN: piece data is invalid (too many squares in rank)"}}if(e[3][1]=="3"&&e[1]=="w"||e[3][1]=="6"&&e[1]=="b")return{ok:false,error:"Invalid FEN: illegal en-passant square"};const r=[{color:"white",regex:/K/g},{color:"black",regex:/k/g}];for(const{color:t,regex:s}of r){if(!s.test(e[0]))return{ok:false,error:`Invalid FEN: missing ${t} king`};if((e[0].match(s)||[]).length>1)return{ok:false,error:`Invalid FEN: too many ${t} kings`}}return Array.from(o[0]+o[7]).some((t=>t.toUpperCase()==="P"))?{ok:false,error:"Invalid FEN: some pawns are on the edge rows"}:{ok:true}}function getDisambiguator(t,e){const s=t.from;const i=t.to;const o=t.piece;let r=0;let n=0;let a=0;for(let t=0,h=e.length;t<h;t++){const h=e[t].from;const l=e[t].to;const c=e[t].piece;if(o===c&&s!==h&&i===l){r++;rank(s)===rank(h)&&n++;file(s)===file(h)&&a++}}return r>0?n>0&&a>0?algebraic(s):a>0?algebraic(s).charAt(1):algebraic(s).charAt(0):""}function addMove(t,e,i,o,r,n=void 0,a=f.NORMAL){const h=rank(o);if(r!==s||h!==E&&h!==w)t.push({color:e,from:i,to:o,piece:r,captured:n,flags:a});else for(let s=0;s<C.length;s++){const h=C[s];t.push({color:e,from:i,to:o,piece:r,captured:n,promotion:h,flags:a|f.PROMOTION})}}function inferPieceType(t){let e=t.charAt(0);if(e>="a"&&e<="h"){const e=t.match(/[a-h]\d.*[a-h]\d/);if(e)return;return s}e=e.toLowerCase();return e==="o"?a:e}function strippedSan(t){return t.replace(/=/,"").replace(/[+#]?[?!]*$/,"")}function trimFen(t){return t.split(" ").slice(0,4).join(" ")}class Chess{_board=new Array(128);_turn=t;_header={};_kings={w:l,b:l};_epSquare=-1;_halfMoves=0;_moveNumber=0;_history=[];_comments={};_castling={w:0,b:0};_positionCount={};constructor(t=h){this.load(t)}clear({preserveHeaders:e=false}={}){this._board=new Array(128);this._kings={w:l,b:l};this._turn=t;this._castling={w:0,b:0};this._epSquare=l;this._halfMoves=0;this._moveNumber=1;this._history=[];this._comments={};this._header=e?this._header:{};this._positionCount={};delete this._header.SetUp;delete this._header.FEN}load(s,{skipValidation:i=false,preserveHeaders:o=false}={}){let r=s.split(/\s+/);if(r.length>=2&&r.length<6){const t=["-","-","0","1"];s=r.concat(t.slice(-(6-r.length))).join(" ")}r=s.split(/\s+/);if(!i){const{ok:t,error:e}=validateFen(s);if(!t)throw new Error(e)}const n=r[0];let a=0;this.clear({preserveHeaders:o});for(let s=0;s<n.length;s++){const i=n.charAt(s);if(i==="/")a+=8;else if(isDigit(i))a+=parseInt(i,10);else{const s=i<"a"?t:e;this._put({type:i.toLowerCase(),color:s},algebraic(a));a++}}this._turn=r[1];r[2].indexOf("K")>-1&&(this._castling.w|=f.KSIDE_CASTLE);r[2].indexOf("Q")>-1&&(this._castling.w|=f.QSIDE_CASTLE);r[2].indexOf("k")>-1&&(this._castling.b|=f.KSIDE_CASTLE);r[2].indexOf("q")>-1&&(this._castling.b|=f.QSIDE_CASTLE);this._epSquare=r[3]==="-"?l:_[r[3]];this._halfMoves=parseInt(r[4],10);this._moveNumber=parseInt(r[5],10);this._updateSetup(s);this._incPositionCount(s)}fen(){let i=0;let o="";for(let e=_.a8;e<=_.h1;e++){if(this._board[e]){if(i>0){o+=i;i=0}const{color:s,type:r}=this._board[e];o+=s===t?r.toUpperCase():r.toLowerCase()}else i++;if(e+1&136){i>0&&(o+=i);e!==_.h1&&(o+="/");i=0;e+=8}}let r="";this._castling[t]&f.KSIDE_CASTLE&&(r+="K");this._castling[t]&f.QSIDE_CASTLE&&(r+="Q");this._castling[e]&f.KSIDE_CASTLE&&(r+="k");this._castling[e]&f.QSIDE_CASTLE&&(r+="q");r=r||"-";let n="-";if(this._epSquare!==l){const e=this._epSquare+(this._turn===t?16:-16);const i=[e+1,e-1];for(const t of i){if(t&136)continue;const e=this._turn;if(this._board[t]?.color===e&&this._board[t]?.type===s){this._makeMove({color:e,from:t,to:this._epSquare,piece:s,captured:s,flags:f.EP_CAPTURE});const i=!this._isKingAttacked(e);this._undoMove();if(i){n=algebraic(this._epSquare);break}}}}return[o,this._turn,r,n,this._halfMoves,this._moveNumber].join(" ")}_updateSetup(t){if(!(this._history.length>0))if(t!==h){this._header.SetUp="1";this._header.FEN=t}else{delete this._header.SetUp;delete this._header.FEN}}reset(){this.load(h)}get(t){return this._board[_[t]]}put({type:t,color:e},s){if(this._put({type:t,color:e},s)){this._updateCastlingRights();this._updateEnPassantSquare();this._updateSetup(this.fen());return true}return false}_put({type:t,color:e},s){if(v.indexOf(t.toLowerCase())===-1)return false;if(!(s in _))return false;const i=_[s];if(t==a&&!(this._kings[e]==l||this._kings[e]==i))return false;const o=this._board[i];o&&o.type===a&&(this._kings[o.color]=l);this._board[i]={type:t,color:e};t===a&&(this._kings[e]=i);return true}remove(t){const e=this.get(t);delete this._board[_[t]];e&&e.type===a&&(this._kings[e.color]=l);this._updateCastlingRights();this._updateEnPassantSquare();this._updateSetup(this.fen());return e}_updateCastlingRights(){const s=this._board[_.e1]?.type===a&&this._board[_.e1]?.color===t;const i=this._board[_.e8]?.type===a&&this._board[_.e8]?.color===e;s&&this._board[_.a1]?.type===r&&this._board[_.a1]?.color===t||(this._castling.w&=~f.QSIDE_CASTLE);s&&this._board[_.h1]?.type===r&&this._board[_.h1]?.color===t||(this._castling.w&=~f.KSIDE_CASTLE);i&&this._board[_.a8]?.type===r&&this._board[_.a8]?.color===e||(this._castling.b&=~f.QSIDE_CASTLE);i&&this._board[_.h8]?.type===r&&this._board[_.h8]?.color===e||(this._castling.b&=~f.KSIDE_CASTLE)}_updateEnPassantSquare(){if(this._epSquare===l)return;const e=this._epSquare+(this._turn===t?-16:16);const i=this._epSquare+(this._turn===t?16:-16);const o=[i+1,i-1];if(this._board[e]!==null||this._board[this._epSquare]!==null||this._board[i]?.color!==swapColor(this._turn)||this._board[i]?.type!==s){this._epSquare=l;return}const canCapture=t=>!(t&136)&&this._board[t]?.color===this._turn&&this._board[t]?.type===s;o.some(canCapture)||(this._epSquare=l)}_attacked(i,o,r){const n=[];for(let a=_.a8;a<=_.h1;a++){if(a&136){a+=7;continue}if(this._board[a]===void 0||this._board[a].color!==i)continue;const h=this._board[a];const l=a-o;if(l===0)continue;const c=l+119;if(g[c]&b[h.type]){if(h.type===s){if(l>0&&h.color===t||l<=0&&h.color===e){if(!r)return true;n.push(algebraic(a))}continue}if(h.type==="n"||h.type==="k"){if(r){n.push(algebraic(a));continue}return true}const i=m[c];let u=a+i;let f=false;while(u!==o){if(this._board[u]!=null){f=true;break}u+=i}if(!f){if(r){n.push(algebraic(a));continue}return true}}}return!!r&&n}attackers(t,e){return e?this._attacked(e,_[t],true):this._attacked(this._turn,_[t],true)}_isKingAttacked(t){const e=this._kings[t];return e!==-1&&this._attacked(swapColor(t),e)}isAttacked(t,e){return this._attacked(e,_[t])}isCheck(){return this._isKingAttacked(this._turn)}inCheck(){return this.isCheck()}isCheckmate(){return this.isCheck()&&this._moves().length===0}isStalemate(){return!this.isCheck()&&this._moves().length===0}isInsufficientMaterial(){const t={b:0,n:0,r:0,q:0,k:0,p:0};const e=[];let s=0;let r=0;for(let i=_.a8;i<=_.h1;i++){r=(r+1)%2;if(i&136){i+=7;continue}const n=this._board[i];if(n){t[n.type]=n.type in t?t[n.type]+1:1;n.type===o&&e.push(r);s++}}if(s===2)return true;if(s===3&&(t[o]===1||t[i]===1))return true;if(s===t[o]+2){let t=0;const s=e.length;for(let i=0;i<s;i++)t+=e[i];if(t===0||t===s)return true}return false}isThreefoldRepetition(){return this._getPositionCount(this.fen())>=3}isDrawByFiftyMoves(){return this._halfMoves>=100}isDraw(){return this.isDrawByFiftyMoves()||this.isStalemate()||this.isInsufficientMaterial()||this.isThreefoldRepetition()}isGameOver(){return this.isCheckmate()||this.isStalemate()||this.isDraw()}moves({verbose:t=false,square:e,piece:s}={}){const i=this._moves({square:e,piece:s});return t?i.map((t=>new Move(this,t))):i.map((t=>this._moveToSan(t,i)))}_moves({legal:t=true,piece:e,square:o}={}){const r=o?o.toLowerCase():void 0;const n=e?.toLowerCase();const h=[];const l=this._turn;const c=swapColor(l);let u=_.a8;let g=_.h1;let m=false;if(r){if(!(r in _))return[];u=g=_[r];m=true}for(let t=u;t<=g;t++){if(t&136){t+=7;continue}if(!this._board[t]||this._board[t].color===c)continue;const{type:e}=this._board[t];let o;if(e===s){if(n&&n!==e)continue;o=t+d[l][0];if(!this._board[o]){addMove(h,l,t,o,s);o=t+d[l][1];I[l]!==rank(t)||this._board[o]||addMove(h,l,t,o,s,void 0,f.BIG_PAWN)}for(let e=2;e<4;e++){o=t+d[l][e];o&136||(this._board[o]?.color===c?addMove(h,l,t,o,s,this._board[o].type,f.CAPTURE):o===this._epSquare&&addMove(h,l,t,o,s,s,f.EP_CAPTURE))}}else{if(n&&n!==e)continue;for(let s=0,r=p[e].length;s<r;s++){const r=p[e][s];o=t;while(true){o+=r;if(o&136)break;if(this._board[o]){if(this._board[o].color===l)break;addMove(h,l,t,o,e,this._board[o].type,f.CAPTURE);break}addMove(h,l,t,o,e);if(e===i||e===a)break}}}}if((n===void 0||n===a)&&(!m||g===this._kings[l])){if(this._castling[l]&f.KSIDE_CASTLE){const t=this._kings[l];const e=t+2;this._board[t+1]||this._board[e]||this._attacked(c,this._kings[l])||this._attacked(c,t+1)||this._attacked(c,e)||addMove(h,l,this._kings[l],e,a,void 0,f.KSIDE_CASTLE)}if(this._castling[l]&f.QSIDE_CASTLE){const t=this._kings[l];const e=t-2;this._board[t-1]||this._board[t-2]||this._board[t-3]||this._attacked(c,this._kings[l])||this._attacked(c,t-1)||this._attacked(c,e)||addMove(h,l,this._kings[l],e,a,void 0,f.QSIDE_CASTLE)}}if(!t||this._kings[l]===-1)return h;const b=[];for(let t=0,e=h.length;t<e;t++){this._makeMove(h[t]);this._isKingAttacked(l)||b.push(h[t]);this._undoMove()}return b}move(t,{strict:e=false}={}){let s=null;if(typeof t==="string")s=this._moveFromSan(t,e);else if(typeof t==="object"){const e=this._moves();for(let i=0,o=e.length;i<o;i++)if(t.from===algebraic(e[i].from)&&t.to===algebraic(e[i].to)&&(!("promotion"in e[i])||t.promotion===e[i].promotion)){s=e[i];break}}if(!s)throw typeof t==="string"?new Error(`Invalid move: ${t}`):new Error(`Invalid move: ${JSON.stringify(t)}`);const i=new Move(this,s);this._makeMove(s);this._incPositionCount(i.after);return i}_push(t){this._history.push({move:t,kings:{b:this._kings.b,w:this._kings.w},turn:this._turn,castling:{b:this._castling.b,w:this._castling.w},epSquare:this._epSquare,halfMoves:this._halfMoves,moveNumber:this._moveNumber})}_makeMove(t){const i=this._turn;const o=swapColor(i);this._push(t);this._board[t.to]=this._board[t.from];delete this._board[t.from];t.flags&f.EP_CAPTURE&&(this._turn===e?delete this._board[t.to-16]:delete this._board[t.to+16]);t.promotion&&(this._board[t.to]={type:t.promotion,color:i});if(this._board[t.to].type===a){this._kings[i]=t.to;if(t.flags&f.KSIDE_CASTLE){const e=t.to-1;const s=t.to+1;this._board[e]=this._board[s];delete this._board[s]}else if(t.flags&f.QSIDE_CASTLE){const e=t.to+1;const s=t.to-2;this._board[e]=this._board[s];delete this._board[s]}this._castling[i]=0}if(this._castling[i])for(let e=0,s=y[i].length;e<s;e++)if(t.from===y[i][e].square&&this._castling[i]&y[i][e].flag){this._castling[i]^=y[i][e].flag;break}if(this._castling[o])for(let e=0,s=y[o].length;e<s;e++)if(t.to===y[o][e].square&&this._castling[o]&y[o][e].flag){this._castling[o]^=y[o][e].flag;break}t.flags&f.BIG_PAWN?this._epSquare=i===e?t.to-16:t.to+16:this._epSquare=l;t.piece===s||t.flags&(f.CAPTURE|f.EP_CAPTURE)?this._halfMoves=0:this._halfMoves++;i===e&&this._moveNumber++;this._turn=o}undo(){const t=this._undoMove();if(t){const e=new Move(this,t);this._decPositionCount(e.after);return e}return null}_undoMove(){const t=this._history.pop();if(t===void 0)return null;const i=t.move;this._kings=t.kings;this._turn=t.turn;this._castling=t.castling;this._epSquare=t.epSquare;this._halfMoves=t.halfMoves;this._moveNumber=t.moveNumber;const o=this._turn;const r=swapColor(o);this._board[i.from]=this._board[i.to];this._board[i.from].type=i.piece;delete this._board[i.to];if(i.captured)if(i.flags&f.EP_CAPTURE){let t;t=o===e?i.to-16:i.to+16;this._board[t]={type:s,color:r}}else this._board[i.to]={type:i.captured,color:r};if(i.flags&(f.KSIDE_CASTLE|f.QSIDE_CASTLE)){let t,e;if(i.flags&f.KSIDE_CASTLE){t=i.to+1;e=i.to-1}else{t=i.to-2;e=i.to+1}this._board[t]=this._board[e];delete this._board[e]}return i}pgn({newline:t="\n",maxWidth:e=0}={}){const s=[];let i=false;for(const e in this._header){s.push("["+e+' "'+this._header[e]+'"]'+t);i=true}i&&this._history.length&&s.push(t);const appendComment=t=>{const e=this._comments[this.fen()];if(typeof e!=="undefined"){const s=t.length>0?" ":"";t=`${t}${s}{${e}}`}return t};const o=[];while(this._history.length>0)o.push(this._undoMove());const r=[];let n="";o.length===0&&r.push(appendComment(""));while(o.length>0){n=appendComment(n);const t=o.pop();if(!t)break;if(this._history.length||t.color!=="b"){if(t.color==="w"){n.length&&r.push(n);n=this._moveNumber+"."}}else{const t=`${this._moveNumber}. ...`;n=n?`${n} ${t}`:t}n=n+" "+this._moveToSan(t,this._moves({legal:true}));this._makeMove(t)}n.length&&r.push(appendComment(n));typeof this._header.Result!=="undefined"&&r.push(this._header.Result);if(e===0)return s.join("")+r.join(" ");const strip=function(){if(s.length>0&&s[s.length-1]===" "){s.pop();return true}return false};const wrapComment=function(i,o){for(const r of o.split(" "))if(r){if(i+r.length>e){while(strip())i--;s.push(t);i=0}s.push(r);i+=r.length;s.push(" ");i++}strip()&&i--;return i};let a=0;for(let i=0;i<r.length;i++)if(a+r[i].length>e&&r[i].includes("{"))a=wrapComment(a,r[i]);else{if(a+r[i].length>e&&i!==0){s[s.length-1]===" "&&s.pop();s.push(t);a=0}else if(i!==0){s.push(" ");a++}s.push(r[i]);a+=r[i].length}return s.join("")}
/*
     * @deprecated Use `setHeader` and `getHeaders` instead.
     */header(...t){for(let e=0;e<t.length;e+=2)typeof t[e]==="string"&&typeof t[e+1]==="string"&&(this._header[t[e]]=t[e+1]);return this._header}setHeader(t,e){this._header[t]=e;return this._header}removeHeader(t){if(t in this._header){delete this._header[t];return true}return false}getHeaders(){return this._header}loadPgn(t,{strict:e=false,newlineChar:s="\r?\n"}={}){function mask(t){return t.replace(/\\/g,"\\")}function parsePgnHeader(t){const e={};const i=t.split(new RegExp(mask(s)));let o="";let r="";for(let t=0;t<i.length;t++){const s=/^\s*\[\s*([A-Za-z]+)\s*"(.*)"\s*\]\s*$/;o=i[t].replace(s,"$1");r=i[t].replace(s,"$2");o.trim().length>0&&(e[o]=r)}return e}t=t.trim();const i=new RegExp("^(\\[((?:"+mask(s)+")|.)*\\])((?:\\s*"+mask(s)+"){2}|(?:\\s*"+mask(s)+")*$)");const o=i.exec(t);const r=o&&o.length>=2?o[1]:"";this.reset();const n=parsePgnHeader(r);let a="";for(const t in n){t.toLowerCase()==="fen"&&(a=n[t]);this.header(t,n[t])}if(e){if(n.SetUp==="1"){if(!("FEN"in n))throw new Error("Invalid PGN: FEN tag must be supplied with SetUp tag");this.load(n.FEN,{preserveHeaders:true})}}else a&&this.load(a,{preserveHeaders:true});function toHex(t){return Array.from(t).map((function(t){return t.charCodeAt(0)<128?t.charCodeAt(0).toString(16):encodeURIComponent(t).replace(/%/g,"").toLowerCase()})).join("")}function fromHex(t){return t.length==0?"":decodeURIComponent("%"+(t.match(/.{1,2}/g)||[]).join("%"))}const encodeComment=function(t){t=t.replace(new RegExp(mask(s),"g")," ");return`{${toHex(t.slice(1,t.length-1))}}`};const decodeComment=function(t){if(t.startsWith("{")&&t.endsWith("}"))return fromHex(t.slice(1,t.length-1))};let h=t.replace(r,"").replace(new RegExp(`({[^}]*})+?|;([^${mask(s)}]*)`,"g"),(function(t,e,s){return e!==void 0?encodeComment(e):" "+encodeComment(`{${s.slice(1)}}`)})).replace(new RegExp(mask(s),"g")," ");const l=/(\([^()]+\))+?/g;while(l.test(h))h=h.replace(l,"");h=h.replace(/\d+\.(\.\.)?/g,"");h=h.replace(/\.\.\./g,"");h=h.replace(/\$\d+/g,"");let c=h.trim().split(new RegExp(/\s+/));c=c.filter((t=>t!==""));let u="";for(let t=0;t<c.length;t++){const s=decodeComment(c[t]);if(s!==void 0){this._comments[this.fen()]=s;continue}const i=this._moveFromSan(c[t],e);if(i==null){if(!(P.indexOf(c[t])>-1))throw new Error(`Invalid move in PGN: ${c[t]}`);u=c[t]}else{u="";this._makeMove(i);this._incPositionCount(this.fen())}}u&&Object.keys(this._header).length&&!this._header.Result&&this.header("Result",u)}
/*
     * Convert a move from 0x88 coordinates to Standard Algebraic Notation
     * (SAN)
     *
     * @param {boolean} strict Use the strict SAN parser. It will throw errors
     * on overly disambiguated moves (see below):
     *
     * r1bqkbnr/ppp2ppp/2n5/1B1pP3/4P3/8/PPPP2PP/RNBQK1NR b KQkq - 2 4
     * 4. ... Nge7 is overly disambiguated because the knight on c6 is pinned
     * 4. ... Ne7 is technically the valid SAN
     */_moveToSan(t,e){let i="";if(t.flags&f.KSIDE_CASTLE)i="O-O";else if(t.flags&f.QSIDE_CASTLE)i="O-O-O";else{if(t.piece!==s){const s=getDisambiguator(t,e);i+=t.piece.toUpperCase()+s}if(t.flags&(f.CAPTURE|f.EP_CAPTURE)){t.piece===s&&(i+=algebraic(t.from)[0]);i+="x"}i+=algebraic(t.to);t.promotion&&(i+="="+t.promotion.toUpperCase())}this._makeMove(t);this.isCheck()&&(this.isCheckmate()?i+="#":i+="+");this._undoMove();return i}_moveFromSan(t,e=false){const s=strippedSan(t);let i=inferPieceType(s);let o=this._moves({legal:true,piece:i});for(let t=0,e=o.length;t<e;t++)if(s===strippedSan(this._moveToSan(o[t],o)))return o[t];if(e)return null;let r;let n;let a;let h;let l;let c=false;n=s.match(/([pnbrqkPNBRQK])?([a-h][1-8])x?-?([a-h][1-8])([qrbnQRBN])?/);if(n){r=n[1];a=n[2];h=n[3];l=n[4];a.length==1&&(c=true)}else{n=s.match(/([pnbrqkPNBRQK])?([a-h]?[1-8]?)x?-?([a-h][1-8])([qrbnQRBN])?/);if(n){r=n[1];a=n[2];h=n[3];l=n[4];a.length==1&&(c=true)}}i=inferPieceType(s);o=this._moves({legal:true,piece:r||i});if(!h)return null;for(let t=0,e=o.length;t<e;t++)if(a){if(!(r&&r.toLowerCase()!=o[t].piece||_[a]!=o[t].from||_[h]!=o[t].to||l&&l.toLowerCase()!=o[t].promotion))return o[t];if(c){const e=algebraic(o[t].from);if((!r||r.toLowerCase()==o[t].piece)&&_[h]==o[t].to&&(a==e[0]||a==e[1])&&(!l||l.toLowerCase()==o[t].promotion))return o[t]}}else if(s===strippedSan(this._moveToSan(o[t],o)).replace("x",""))return o[t];return null}ascii(){let e="   +------------------------+\n";for(let s=_.a8;s<=_.h1;s++){file(s)===0&&(e+=" "+"87654321"[rank(s)]+" |");if(this._board[s]){const i=this._board[s].type;const o=this._board[s].color;const r=o===t?i.toUpperCase():i.toLowerCase();e+=" "+r+" "}else e+=" . ";if(s+1&136){e+="|\n";s+=8}}e+="   +------------------------+\n";e+="     a  b  c  d  e  f  g  h";return e}perft(t){const e=this._moves({legal:false});let s=0;const i=this._turn;for(let o=0,r=e.length;o<r;o++){this._makeMove(e[o]);this._isKingAttacked(i)||(t-1>0?s+=this.perft(t-1):s++);this._undoMove()}return s}turn(){return this._turn}board(){const t=[];let e=[];for(let s=_.a8;s<=_.h1;s++){this._board[s]==null?e.push(null):e.push({square:algebraic(s),type:this._board[s].type,color:this._board[s].color});if(s+1&136){t.push(e);e=[];s+=8}}return t}squareColor(t){if(t in _){const e=_[t];return(rank(e)+file(e))%2===0?"light":"dark"}return null}history({verbose:t=false}={}){const e=[];const s=[];while(this._history.length>0)e.push(this._undoMove());while(true){const i=e.pop();if(!i)break;t?s.push(new Move(this,i)):s.push(this._moveToSan(i,this._moves()));this._makeMove(i)}return s}_getPositionCount(t){const e=trimFen(t);return this._positionCount[e]||0}_incPositionCount(t){const e=trimFen(t);this._positionCount[e]===void 0&&(this._positionCount[e]=0);this._positionCount[e]+=1}_decPositionCount(t){const e=trimFen(t);this._positionCount[e]===1?delete this._positionCount[e]:this._positionCount[e]-=1}_pruneComments(){const t=[];const e={};const copyComment=t=>{t in this._comments&&(e[t]=this._comments[t])};while(this._history.length>0)t.push(this._undoMove());copyComment(this.fen());while(true){const e=t.pop();if(!e)break;this._makeMove(e);copyComment(this.fen())}this._comments=e}getComment(){return this._comments[this.fen()]}setComment(t){this._comments[this.fen()]=t.replace("{","[").replace("}","]")}
/**
     * @deprecated Renamed to `removeComment` for consistency
     */deleteComment(){return this.removeComment()}removeComment(){const t=this._comments[this.fen()];delete this._comments[this.fen()];return t}getComments(){this._pruneComments();return Object.keys(this._comments).map((t=>({fen:t,comment:this._comments[t]})))}
/**
     * @deprecated Renamed to `removeComments` for consistency
     */deleteComments(){return this.removeComments()}removeComments(){this._pruneComments();return Object.keys(this._comments).map((t=>{const e=this._comments[t];delete this._comments[t];return{fen:t,comment:e}}))}setCastlingRights(t,e){for(const s of[a,n])e[s]!==void 0&&(e[s]?this._castling[t]|=A[s]:this._castling[t]&=~A[s]);this._updateCastlingRights();const s=this.getCastlingRights(t);return(e[a]===void 0||e[a]===s[a])&&(e[n]===void 0||e[n]===s[n])}getCastlingRights(t){return{[a]:(this._castling[t]&A[a])!==0,[n]:(this._castling[t]&A[n])!==0}}moveNumber(){return this._moveNumber}}export{o as BISHOP,e as BLACK,Chess,h as DEFAULT_POSITION,a as KING,i as KNIGHT,Move,s as PAWN,n as QUEEN,r as ROOK,u as SQUARES,t as WHITE,validateFen};

