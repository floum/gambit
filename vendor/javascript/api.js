import{toggleOrientation as e,setPieces as r,selectSquare as t,unselect as o,baseMove as n,baseNewPiece as i,playPremove as a,playPredrop as s,unsetPremove as m,unsetPredrop as p,cancelMove as d,stop as l,whitePov as u,getKeyAtDomPos as c}from"./board.js";import{write as f}from"./fen.js";import{applyAnimation as g,configure as j}from"./config.js";import{anim as w,render as b}from"./anim.js";import{cancel as P,dragNewPiece as v}from"./drag.js";import{explosion as y}from"./explosion.js";import"./util.js";import"./types.js";import"./premove.js";import"./draw.js";function start(h,O){function toggleOrientation$1(){e(h);O()}return{set(e){e.orientation&&e.orientation!==h.orientation&&toggleOrientation$1();g(h,e);(e.fen?w:b)((r=>j(r,e)),h)},state:h,getFen:()=>f(h.pieces),toggleOrientation:toggleOrientation$1,setPieces(e){w((t=>r(t,e)),h)},selectSquare(e,r){if(e)w((o=>t(o,e,r)),h);else if(h.selected){o(h);h.dom.redraw()}},move(e,r){w((t=>n(t,e,r)),h)},newPiece(e,r){w((t=>i(t,e,r)),h)},playPremove(){if(h.premovable.current){if(w(a,h))return true;h.dom.redraw()}return false},playPredrop(e){if(h.predroppable.current){const r=s(h,e);h.dom.redraw();return r}return false},cancelPremove(){b(m,h)},cancelPredrop(){b(p,h)},cancelMove(){b((e=>{d(e);P(e)}),h)},stop(){b((e=>{l(e);P(e)}),h)},explode(e){y(h,e)},setAutoShapes(e){b((r=>r.drawable.autoShapes=e),h)},setShapes(e){b((r=>r.drawable.shapes=e),h)},getKeyAtDomPos(e){return c(e,u(h),h.dom.bounds())},redrawAll:O,dragNewPiece(e,r,t){v(h,e,r,t)},destroy(){l(h);h.dom.unbind&&h.dom.unbind();h.dom.destroyed=true}}}export{start};
//# sourceMappingURL=api.js.map
