import{createEl as e,setVisible as o}from"./util.js";import{colors as s,ranks as i,files as n}from"./types.js";import{createElement as r,setAttributes as t,createDefs as a}from"./svg.js";function renderWrap(d,p){d.innerHTML="";d.classList.add("cg-wrap");for(const e of s)d.classList.toggle("orientation-"+e,p.orientation===e);d.classList.toggle("manipulable",!p.viewOnly);const l=e("cg-container");d.appendChild(l);const c=e("cg-board");l.appendChild(c);let g;let h;let f;if(p.drawable.visible){g=t(r("svg"),{class:"cg-shapes",viewBox:"-4 -4 8 8",preserveAspectRatio:"xMidYMid slice"});g.appendChild(a());g.appendChild(r("g"));h=t(r("svg"),{class:"cg-custom-svgs",viewBox:"-3.5 -3.5 8 8",preserveAspectRatio:"xMidYMid slice"});h.appendChild(r("g"));f=e("cg-auto-pieces");l.appendChild(g);l.appendChild(h);l.appendChild(f)}if(p.coordinates){const e=p.orientation==="black"?" black":"";const o=p.ranksPosition==="left"?" left":"";if(p.coordinatesOnSquares){const s=p.orientation==="white"?e=>e+1:e=>8-e;n.forEach(((n,r)=>l.appendChild(renderCoords(i.map((e=>n+e)),"squares rank"+s(r)+e+o))))}else{l.appendChild(renderCoords(i,"ranks"+e+o));l.appendChild(renderCoords(n,"files"+e))}}let C;if(p.draggable.enabled&&p.draggable.showGhost){C=e("piece","ghost");o(C,false);l.appendChild(C)}return{board:c,container:l,wrap:d,ghost:C,svg:g,customSvg:h,autoPieces:f}}function renderCoords(o,s){const i=e("coords",s);let n;for(const s of o){n=e("coord");n.textContent=s;i.appendChild(n)}return i}export{renderWrap};
//# sourceMappingURL=wrap.js.map
