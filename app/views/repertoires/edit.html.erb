<h2 class="text-center">Repertoire : <%= @repertoire.name %></h2>

<div class="row text-center">
  <div class="col-6 offset-3">
    <div id="chessboard" class="blue merida"></div>
  </div>
</div>

<br />
<div class="text-center">
  <div id="current-fen"></div>
</div>
<div class="text-center">
  <%= button_tag 'Add To Repertoire', id: 'submit', class: 'btn btn-primary' %>
  <%= button_tag 'Reset Board', id: 'reset', class: 'btn btn-primary' %>
</div>

<script type="module">

import { Chessground } from 'chessground'
import { Chess } from 'chess.js'

const starting_fen = 'rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1'
let initial_fen = '<%= params[:from] || "rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1" %>'

let game = new Chess(initial_fen)
setCurrentFen(initial_fen)

var board = Chessground(document.getElementById('chessboard'), {
  orientation: '<%= @repertoire.color %>',
  fen: initial_fen,
  movable: {
    events: {
      after: (orig, dest, metadata) => {
        try {
          game.move({from: orig, to: dest})
          setCurrentFen(game.fen())
        } catch (error) {
          board.set({
            fen: game.fen()
          })
        }
      }
    }
  }
})

function resetBoard() {
  board.set({
    fen: starting_fen
  })
  game.load(starting_fen)
  setCurrentFen(starting_fen)
}

function addLineToRepertoire() {
  const csrfToken = document.querySelector("[name='csrf-token']").content
  let history = game.history({verbose: true})
  resetBoard()

  fetch('/repertoires/<%= @repertoire.id %>', { method: 'PUT',
  body: JSON.stringify({ "line": history }),
  headers: {
    "X-CSRF-Token": csrfToken, 
    "Content-type": "application/json"
    }
  }).then((response) => console.log(response))
}

function setCurrentFen(fen) {
  document.getElementById('current-fen').innerHTML = fen
}

document.getElementById('submit').addEventListener('click', addLineToRepertoire)
document.getElementById('reset').addEventListener('click', resetBoard)
</script>
